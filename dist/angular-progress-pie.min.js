angular.module("angular-progress-pie",[]).directive("progressPie",function(){function a(a,r){var t="[progressPie] "+a;r&&(t+=", using default of "+r+"px instead"),console.error(t)}return{scope:{value:"=",invertFill:"=",min:"@",max:"@"},restrict:"E",replace:!1,template:'<svg style="display: block;"><path class="progressPieFill" /></svg>',compile:function(r,t){function i(a,r,t){return void 0!==t&&(a=t>=a?a:t),void 0!==r&&(a=a>=r?a:r),a}function e(a,r,t,i){return"M 0 0 v -"+a+" A "+a+" "+a+" 1 "+r+" 1 "+t+" "+i+" z"}var n=50,s=0,o=100,l=n;t.radius?(l=parseFloat(t.radius,10),isNaN(l)&&(a("Radius '"+t.radius+"' is not a valid number",n),l=n)):a("Radius not supplied as attribute for pie timer",n);var u=l/2;r.attr("width",u),r.attr("height",u),r.attr("viewbox","0 0 "+u+" "+u),r.find("path").attr("transform","translate("+u+","+u+")");var p=function(a,r,t){function n(){var r=(i(a.value,p,v)-p)/(v-p)*100,t=a.invertFill?100-r:r,n=t/100*360;n=i(n,0,359.999);var s=n*Math.PI/180,o=Math.sin(s)*u,d=Math.cos(s)*-u,c=n>180?1:0,f=e(u,c,o,d);l.attr("d",f)}var l=r.find("path"),p=parseFloat(a.min,10)||s,v=parseFloat(a.max,10)||o;n(),a.$watch("value",n)};return p}}});